version: '3.7'
services:
  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./proxies-other-sites-for-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker-volumes/etc/letsencrypt:/etc/letsencrypt
      - ./docker-volumes/var/lib/letsencrypt:/var/lib/letsencrypt 
      - ./docker-volumes/letsencrypt-docker-nginx/src/letsencrypt/letsencrypt-site:/data/letsencrypt
      - ./docker-volumes/var/log/letsencrypt:/var/log/letsencrypt
    networks:
      - docker-network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --standalone --email support@floatingcloud.io --agree-tos --no-eff-email --non-interactive -d hmail.float.i.ng  --webroot-path=/data/letsencrypt --staging; sleep 12h & wait $${!}; done;'"
    # When testing add --staging to command
    # command:  certonly --email support@floatingcloud.io --agree-tos --no-eff-email --non-interactive -d amaru.floatingcloud.io --standalone --webroot-path=/data/letsencrypt --staging
    ### COMMAND BY ITSELF 
    #sudo docker run -it --rm -p 80 -v "./docker-volumes/etc/letsencrypt:/etc/letsencrypt" -v "./docker-volumes/var/lib/letsencrypt:/var/lib/letsencrypt" -v "./docker-volumes/letsencrypt-docker-nginx/src/letsencrypt/letsencrypt-site:/data/letsencrypt" -v "./docker-volumes/var/log/letsencrypt:/var/log/letsencrypt" certbot/certbot certonly --email support@floatingcloud.io --agree-tos --no-eff-email --non-interactive -d amaru.floatingcloud.io --standalone --webroot-path=/data/letsencrypt --staging


  nginx-reverse:
    container_name: 'nginx-reverse'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxies-other-sites-for-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker-volumes/etc/letsencrypt:/etc/letsencrypt
      - ./docker-volumes/var/lib/letsencrypt:/var/lib/letsencrypt 
      - ./docker-volumes/letsencrypt-docker-nginx/src/letsencrypt/letsencrypt-site:/data/letsencrypt
      - ./docker-volumes/var/log/letsencrypt:/var/log/letsencrypt


      
    entrypoint: "/bin/sh -c 'while :; do sleep 24h & wait $${!}; /usr/sbin/nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - docker-network
    depends_on:
      - www
      - www2
      - www3
    links:
      - www
      - www2
      - www3

  www:
    container_name: 'www'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/conf.d/default.conf
      - ../docker-volumes/www:/usr/share/nginx/html
    networks:
      - docker-network
    #depends_on:
    #  - proxy
    #links:
    #  - proxy
  www2:
    container_name: 'www2'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80"

    volumes:
      - ./nginx-simple.conf:/etc/nginx/conf.d/default.conf
      - ../docker-volumes/www2:/usr/share/nginx/html
    networks:
      - docker-network
    #depends_on:
    #  - proxy
    #links:
    #  - proxy

  www3:
    container_name: 'www3'
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "80"
      #- "443:443"
    volumes:
      - ./nginx-simple.conf:/etc/nginx/conf.d/default.conf
      - ../docker-volumes/www3:/usr/share/nginx/html
    networks:
      - docker-network
    #depends_on:
    #  - proxy
    #links:
    #  - proxy

networks:
  docker-network:
    driver: bridge

